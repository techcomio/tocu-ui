// contra@v1.8.1, MIT licensed. https://github.com/bevacqua/contra
!function(t,r){"use strict";if(r.prototype.forEach||(r.prototype.forEach=function(t,r){if(void 0===this||null===this||"function"!=typeof t)throw new TypeError;for(var o=this,n=o.length,e=0;n>e;e++)e in o&&t.call(r,o[e],e,o)}),r.prototype.indexOf||(r.prototype.indexOf=function(t,r){if(void 0===this||null===this)throw new TypeError;var o=this.length;for(r=+r||0,1/0===Math.abs(r)?r=0:0>r&&(r+=o,0>r&&(r=0));o>r;r++)if(this[r]===t)return r;return-1}),r.prototype.filter||(r.prototype.filter=function(t,r){var o=[];return this.forEach(function(n,e,i){t.call(r,n,e,i)&&o.push(n)},r),o}),Function.prototype.bind||(Function.prototype.bind=function(t){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var o=r.prototype.slice.call(arguments,1),n=this,e=function(){},i=function(){var i=this instanceof e&&t?this:t,p=o.concat(r.prototype.slice.call(arguments));return n.apply(i,p)};return e.prototype=this.prototype,i.prototype=new e,i}),t.keys||(t.keys=function(t){var r=[];for(var o in t)t.hasOwnProperty(o)&&r.push(o);return r}),t.defineProperty)try{t.defineProperty({},"x",{})}catch(o){t.definePropertyPartial=!0}}(Object,Array);